{"id":"src/Objects/LevelPassedManager.js","dependencies":[{"name":"C:\\Users\\PC1\\WebstormProjects\\FootballGame\\package.json","includedInParent":true,"mtime":1632859080423},{"name":"../../config/config","loc":{"line":1,"column":21},"parent":"C:\\Users\\PC1\\WebstormProjects\\FootballGame\\src\\Objects\\LevelPassedManager.js","resolved":"C:\\Users\\PC1\\WebstormProjects\\FootballGame\\config\\config.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _config = require(\"../../config/config\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar numberOfEntries;\nvar correctEntries;\n\nvar LevelPassedManager = /*#__PURE__*/function () {\n  function LevelPassedManager() {\n    _classCallCheck(this, LevelPassedManager);\n\n    numberOfEntries = 0;\n    correctEntries = 0;\n  }\n\n  _createClass(LevelPassedManager, [{\n    key: \"addEntry\",\n    value: function addEntry(isCorrect) {\n      numberOfEntries++;\n\n      if (isCorrect) {\n        correctEntries++;\n      }\n    }\n  }, {\n    key: \"isLevelPassed\",\n    value: function isLevelPassed() {\n      var actualPercentage = correctEntries / numberOfEntries;\n      return actualPercentage > _config.CONFIG.score.percentToPassTheLevel;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      numberOfEntries = 0;\n      correctEntries = 0;\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      this.reset();\n    }\n  }]);\n\n  return LevelPassedManager;\n}();\n\nexports.default = LevelPassedManager;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":3,"column":0}},{"name":"numberOfEntries","generated":{"line":16,"column":4},"source":"src/Objects/LevelPassedManager.js","original":{"line":3,"column":4}},{"generated":{"line":16,"column":19},"source":"src/Objects/LevelPassedManager.js","original":{"line":3,"column":0}},{"generated":{"line":17,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":4,"column":0}},{"name":"correctEntries","generated":{"line":17,"column":4},"source":"src/Objects/LevelPassedManager.js","original":{"line":4,"column":4}},{"generated":{"line":17,"column":18},"source":"src/Objects/LevelPassedManager.js","original":{"line":4,"column":0}},{"name":"LevelPassedManager","generated":{"line":19,"column":4},"source":"src/Objects/LevelPassedManager.js","original":{"line":7,"column":21}},{"generated":{"line":20,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":8,"column":4}},{"generated":{"line":20,"column":32},"source":"src/Objects/LevelPassedManager.js","original":{"line":8,"column":18}},{"generated":{"line":21,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":8,"column":18}},{"name":"numberOfEntries","generated":{"line":23,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":9,"column":8}},{"name":"numberOfEntries","generated":{"line":23,"column":4},"source":"src/Objects/LevelPassedManager.js","original":{"line":9,"column":8}},{"generated":{"line":23,"column":19},"source":"src/Objects/LevelPassedManager.js","original":{"line":9,"column":23}},{"generated":{"line":23,"column":22},"source":"src/Objects/LevelPassedManager.js","original":{"line":9,"column":26}},{"generated":{"line":23,"column":23},"source":"src/Objects/LevelPassedManager.js","original":{"line":9,"column":8}},{"name":"correctEntries","generated":{"line":24,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":10,"column":8}},{"name":"correctEntries","generated":{"line":24,"column":4},"source":"src/Objects/LevelPassedManager.js","original":{"line":10,"column":8}},{"generated":{"line":24,"column":18},"source":"src/Objects/LevelPassedManager.js","original":{"line":10,"column":22}},{"generated":{"line":24,"column":21},"source":"src/Objects/LevelPassedManager.js","original":{"line":10,"column":25}},{"generated":{"line":24,"column":22},"source":"src/Objects/LevelPassedManager.js","original":{"line":10,"column":8}},{"generated":{"line":25,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":11,"column":5}},{"generated":{"line":29,"column":11},"source":"src/Objects/LevelPassedManager.js","original":{"line":12,"column":4}},{"name":"isCorrect","generated":{"line":29,"column":29},"source":"src/Objects/LevelPassedManager.js","original":{"line":12,"column":13}},{"generated":{"line":29,"column":38},"source":"src/Objects/LevelPassedManager.js","original":{"line":12,"column":4}},{"generated":{"line":29,"column":40},"source":"src/Objects/LevelPassedManager.js","original":{"line":12,"column":24}},{"name":"numberOfEntries","generated":{"line":30,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":13,"column":8}},{"name":"numberOfEntries","generated":{"line":30,"column":6},"source":"src/Objects/LevelPassedManager.js","original":{"line":13,"column":8}},{"generated":{"line":30,"column":21},"source":"src/Objects/LevelPassedManager.js","original":{"line":13,"column":23}},{"generated":{"line":32,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":14,"column":8}},{"name":"isCorrect","generated":{"line":32,"column":10},"source":"src/Objects/LevelPassedManager.js","original":{"line":14,"column":12}},{"generated":{"line":32,"column":19},"source":"src/Objects/LevelPassedManager.js","original":{"line":14,"column":8}},{"generated":{"line":32,"column":21},"source":"src/Objects/LevelPassedManager.js","original":{"line":14,"column":23}},{"name":"correctEntries","generated":{"line":33,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":15,"column":12}},{"name":"correctEntries","generated":{"line":33,"column":8},"source":"src/Objects/LevelPassedManager.js","original":{"line":15,"column":12}},{"generated":{"line":33,"column":22},"source":"src/Objects/LevelPassedManager.js","original":{"line":15,"column":26}},{"generated":{"line":34,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":16,"column":9}},{"generated":{"line":35,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":17,"column":5}},{"generated":{"line":38,"column":11},"source":"src/Objects/LevelPassedManager.js","original":{"line":19,"column":4}},{"generated":{"line":38,"column":36},"source":"src/Objects/LevelPassedManager.js","original":{"line":19,"column":20}},{"generated":{"line":39,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":20,"column":8}},{"name":"actualPercentage","generated":{"line":39,"column":10},"source":"src/Objects/LevelPassedManager.js","original":{"line":20,"column":12}},{"generated":{"line":39,"column":26},"source":"src/Objects/LevelPassedManager.js","original":{"line":20,"column":28}},{"name":"correctEntries","generated":{"line":39,"column":29},"source":"src/Objects/LevelPassedManager.js","original":{"line":20,"column":31}},{"generated":{"line":39,"column":43},"source":"src/Objects/LevelPassedManager.js","original":{"line":20,"column":45}},{"name":"numberOfEntries","generated":{"line":39,"column":46},"source":"src/Objects/LevelPassedManager.js","original":{"line":20,"column":48}},{"generated":{"line":39,"column":61},"source":"src/Objects/LevelPassedManager.js","original":{"line":20,"column":8}},{"generated":{"line":40,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":21,"column":8}},{"name":"actualPercentage","generated":{"line":40,"column":13},"source":"src/Objects/LevelPassedManager.js","original":{"line":21,"column":15}},{"generated":{"line":40,"column":29},"source":"src/Objects/LevelPassedManager.js","original":{"line":21,"column":31}},{"name":"CONFIG","generated":{"line":40,"column":32},"source":"src/Objects/LevelPassedManager.js","original":{"line":21,"column":34}},{"name":"score","generated":{"line":40,"column":47},"source":"src/Objects/LevelPassedManager.js","original":{"line":21,"column":41}},{"generated":{"line":40,"column":52},"source":"src/Objects/LevelPassedManager.js","original":{"line":21,"column":34}},{"name":"percentToPassTheLevel","generated":{"line":40,"column":53},"source":"src/Objects/LevelPassedManager.js","original":{"line":21,"column":47}},{"generated":{"line":40,"column":74},"source":"src/Objects/LevelPassedManager.js","original":{"line":21,"column":8}},{"generated":{"line":41,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":22,"column":5}},{"generated":{"line":44,"column":11},"source":"src/Objects/LevelPassedManager.js","original":{"line":24,"column":4}},{"generated":{"line":44,"column":28},"source":"src/Objects/LevelPassedManager.js","original":{"line":24,"column":12}},{"name":"numberOfEntries","generated":{"line":45,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":25,"column":8}},{"name":"numberOfEntries","generated":{"line":45,"column":6},"source":"src/Objects/LevelPassedManager.js","original":{"line":25,"column":8}},{"generated":{"line":45,"column":21},"source":"src/Objects/LevelPassedManager.js","original":{"line":25,"column":23}},{"generated":{"line":45,"column":24},"source":"src/Objects/LevelPassedManager.js","original":{"line":25,"column":26}},{"generated":{"line":45,"column":25},"source":"src/Objects/LevelPassedManager.js","original":{"line":25,"column":8}},{"name":"correctEntries","generated":{"line":46,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":26,"column":8}},{"name":"correctEntries","generated":{"line":46,"column":6},"source":"src/Objects/LevelPassedManager.js","original":{"line":26,"column":8}},{"generated":{"line":46,"column":20},"source":"src/Objects/LevelPassedManager.js","original":{"line":26,"column":22}},{"generated":{"line":46,"column":23},"source":"src/Objects/LevelPassedManager.js","original":{"line":26,"column":25}},{"generated":{"line":46,"column":24},"source":"src/Objects/LevelPassedManager.js","original":{"line":26,"column":8}},{"generated":{"line":47,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":27,"column":5}},{"generated":{"line":50,"column":11},"source":"src/Objects/LevelPassedManager.js","original":{"line":29,"column":4}},{"generated":{"line":50,"column":29},"source":"src/Objects/LevelPassedManager.js","original":{"line":29,"column":13}},{"generated":{"line":51,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":30,"column":8}},{"name":"reset","generated":{"line":51,"column":11},"source":"src/Objects/LevelPassedManager.js","original":{"line":30,"column":13}},{"generated":{"line":51,"column":16},"source":"src/Objects/LevelPassedManager.js","original":{"line":30,"column":8}},{"generated":{"line":52,"column":0},"source":"src/Objects/LevelPassedManager.js","original":{"line":31,"column":5}}],"sources":{"src/Objects/LevelPassedManager.js":"import {CONFIG} from \"../../config/config\";\r\n\r\nvar numberOfEntries;\r\nvar correctEntries;\r\n\r\n\r\nexport default class LevelPassedManager {\r\n    constructor() {\r\n        numberOfEntries = 0;\r\n        correctEntries = 0;\r\n    }\r\n    addEntry(isCorrect) {\r\n        numberOfEntries++;\r\n        if (isCorrect) {\r\n            correctEntries++;\r\n        }\r\n    }\r\n\r\n    isLevelPassed() {\r\n        let actualPercentage = correctEntries / numberOfEntries\r\n        return actualPercentage > CONFIG.score.percentToPassTheLevel;\r\n    }\r\n\r\n    reset() {\r\n        numberOfEntries = 0;\r\n        correctEntries = 0;\r\n    }\r\n\r\n    create() {\r\n        this.reset();\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"f12c83fc48683bcdb9aa60aa0d75d7a6","cacheData":{"env":{}}}